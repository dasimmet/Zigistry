import database from "@database";
import type { Repo } from "@types";
class {
  declare state: {
    searchDdosQuery: string;
    searchResults: Repo[];
    intelegentSortData: Repo[];
    showSearchResults: boolean;
  };
  onCreate() {
    this.state = {
      searchDdosQuery: "",
      searchResults: [],
      showSearchResults: false,
      intelegentSortData: [],
    };
  }
  onMount() {
    const my_element = document.getElementById(
      "dropDownID",
    ) as HTMLSelectElement;
    const my_element2 = document.getElementById(
      "search_box",
    ) as HTMLInputElement;
    my_element.addEventListener("change", (event) => {
      const selectedValue = my_element.value;
      if (selectedValue === "No Filter") {
        this.state.showSearchResults = false;
        return;
      }
      fetch(
        `/api/searchPrograms?q=${my_element2.value}&filter=${selectedValue}`,
      )
        .then((x) => {
          return x.json();
        })
        .then((y: Repo[]) => {
          this.state.searchResults = y;
          this.state.showSearchResults = true;
        });
    });
  }
  onSort(name: string) {
    // Store the results from the server here:
    let sortedResults = [...this.state.searchResults]; // Work on a copy
    switch (name) {
      case "intelligent_sort":
        if (this.state.intelegentSortData.length > 0) {
          sortedResults = [...this.state.intelegentSortData]; // Use intelligent sort data
        } else {
          console.warn("Intelligent sort data is empty.");
          return; // Prevent sorting if no data is available
        }
        break;
      case "star_count_sort":
        sortedResults = sortedResults.sort(
          (a: Repo, b: Repo) => b.stargazers_count - a.stargazers_count,
        );
        break;
      case "last_updated":
        sortedResults = sortedResults.sort(
          (a: Repo, b: Repo) =>
            new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime(),
        );
        break;
      case "a_to_z":
        sortedResults = sortedResults.sort((a: Repo, b: Repo) =>
          a.name.localeCompare(b.name),
        );
        break;
      case "fork_sort":
        sortedResults = sortedResults.sort(
          (a: Repo, b: Repo) => b.forks_count - a.forks_count,
        );
        break;
    }
    // Update state
    this.state.searchResults = sortedResults;
  }
  onSearch() {
    const ele = document.getElementById("search_box") as HTMLInputElement;
    const value = ele.value;
    if (value === this.state.searchDdosQuery || value === "") return;
    this.state.searchDdosQuery = value;
    fetch(`/api/searchPrograms?q=${value}`)
      .then((x) => {
        return x.json();
      })
      .then((y: Repo[]) => {
        this.state.searchResults = y;
        this.state.intelegentSortData = [...y];
        this.state.showSearchResults = true;
      });
  }
  onKeyUp(event: KeyboardEvent) {
    if (event.key === "Enter") {
      this.onSearch();
    }
    const ele = document.getElementById("search_box") as HTMLInputElement;
    const value = ele.value;
    if (value === "") {
      this.state.showSearchResults = false;
      this.state.searchDdosQuery = "";
    }
  }
}
static const $mostUsed: Repo[] = (
  [...database.programs, ...database.programs_gitlab]
    .sort((a, b) => b.stargazers_count - a.stargazers_count)
    .slice(0, 10)
);
static const $sortedRepos: Repo[] = (
  [...database.programs, ...database.programs_gitlab]
    .slice()
    .sort(
      (a, b) =>
        new Date(b.created_at).getTime() - new Date(a.created_at).getTime(),
    )
);
static const $top10LatestRepos: Repo[] = $sortedRepos.slice(0, 10);

div
  div.flex.flex-col.items-center
    div class="rounded-lg sm:m-5 sm:p-5 sm:shadow-lg sm:shadow-black"
      h1.my-5.text-center.text-2xl.font-semibold -- Search Ziglang Programs
      div.flex
        div.w-fit data-testid="flowbite-tooltip-target"
          div.ml-4.flex
            div.relative.w-max.min-w-10.max-w-36
              select#dropDownID class="block w-full rounded-lg border border-yellow-500 bg-yellow-50 p-2.5 text-sm text-yellow-900 placeholder-yellow-700 focus:border-yellow-500 focus:ring-yellow-500 disabled:cursor-not-allowed disabled:opacity-50 dark:border-yellow-400 dark:bg-yellow-100 dark:focus:border-yellow-500 dark:focus:ring-yellow-500"
                option -- No Filter
                option -- api
                option -- http
                option -- rest
                option -- gamedev
                option -- gui
                option -- cross-platform

        div [
          data-testid="flowbite-tooltip"
          tabindex="-1"
          class="invisible absolute left-[599.35px] top-[126px] z-10 inline-block rounded-lg bg-gray-900 px-3 py-2 text-sm font-medium text-white opacity-0 shadow-sm transition-opacity duration-300 dark:bg-gray-700"
          id=":r0Rp:"
          role="tooltip"
        ]
          div.relative.z-20 -- Search by filtering GitHub topics
          div [
            class="absolute bottom-[-4px] left-[115.5px] z-10 h-2 w-2 rotate-45 bg-gray-900 dark:bg-gray-700"
            data-testid="flowbite-tooltip-arrow"
          ]
            -- &nbsp;
        div.mx-4.mb-5.flex.w-60.max-w-72
          div.relative.w-full
            input#search_box [
              class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-cyan-500 focus:ring-cyan-500 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-cyan-500 dark:focus:ring-cyan-500"
              type="text"
              placeholder="Search 2000+ Zig programs"
              autofocus
              on-keyup("onKeyUp")
            ]

if(!state.showSearchResults)
  div
    h1 class=[
      "my-5",
      "ml-10",
      "flex",
      "w-fit",
      "items-center",
      "rounded",
      "border-2",
      "border-slate-400",
      "px-4",
      `pt-[18px]`,
      "pb-4",
      "text-left",
      "text-2xl",
      "font-semibold",
      "shadow-lg",
      "shadow-black",
    ]
      div class="flex translate-y-[-5px] items-center gap-3"
        div.relative.flex.w-8
          flowbite-play-outline [
            stroke="currentColor"
            fill="currentColor"
            stroke-width="0"
            viewBox="0 0 25 25"
            height="25"
            width="25"
            class="absolute left-0 z-10 -translate-y-[6px]"
          ]
          flowbite-play-outline [
            stroke="currentColor"
            fill="currentColor"
            stroke-width="0"
            viewBox="0 0 25 25"
            height="25"
            width="25"
            class="absolute left-3 -translate-y-[6px]"
          ]
      span -- &nbsp;Recently released:
    section.flex.w-full.flex-wrap.justify-evenly
      for|Card_Details| of=$top10LatestRepos
        custom_card Card_Details=Card_Details section="programs"
    h1.my-5.ml-10.flex.w-fit.items-center.rounded.border-2.border-slate-400.p-4.text-left.text-2xl.font-semibold.shadow-lg.shadow-black
      flowbite-star-solid [
        stroke="currentColor"
        fill="currentColor"
        stroke-width="0"
        viewBox="0 0 25 25"
        height="25"
        width="25"
      ]
      -- &nbsp;Most used:
    section.flex.w-full.flex-wrap.justify-evenly
      for|Card_Details| of=$mostUsed
        custom_card Card_Details=Card_Details section="programs"
    h1.my-5.ml-10.flex.w-fit.items-center.rounded.border-2.border-slate-400.p-4.text-left.text-2xl.font-semibold.shadow-lg.shadow-black
      internet_icon
      -- &nbsp;View More:
    section.flex.w-full.flex-wrap.justify-evenly
      infinite_scroll section="programs"
else
  div
    h1.mb-2.text-center.text-2xl -- Sort:
    div.flex.items-center.justify-center
      div.inline-flex.rounded-md.shadow-sm role="group"
        button [
          type="button"
          onClick("onSort", "intelligent_sort")
          class="rounded-s-lg border border-gray-200 bg-white px-4 py-2 text-sm font-medium text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:text-blue-700 focus:ring-2 focus:ring-blue-700 dark:border-gray-700 dark:bg-gray-800 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white dark:focus:text-white dark:focus:ring-blue-500"
        ]
          flowbite-brain-solid [
            stroke="currentColor"
            fill="currentColor"
            aria-hidden="true"
            stroke-width="0"
            viewBox="0 0 24 24"
            height="20px"
            width="20px"
            xmlns="http://www.w3.org/2000/svg"
          ]
        button [
          type="button"
          onClick("onSort", "star_count_sort")
          class="border-b border-r border-t border-gray-200 bg-white px-4 py-2 text-sm font-medium text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:text-blue-700 focus:ring-2 focus:ring-blue-700 dark:border-gray-700 dark:bg-gray-800 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white dark:focus:text-white dark:focus:ring-blue-500"
        ]
          flowbite-star-solid [
            class="mr-1 text-[white]"
            stroke="currentColor"
            fill="currentColor"
            stroke-width="0"
            viewBox="0 0 24 24"
            color="#cfbc0e"
            height="20"
            width="20"
            xmlns="http://www.w3.org/2000/svg"
          ]
        button [
          type="button"
          onClick("onSort", "last_updated")
          class="border-b border-r border-t border-gray-200 bg-white px-4 py-2 text-sm font-medium text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:text-blue-700 focus:ring-2 focus:ring-blue-700 dark:border-gray-700 dark:bg-gray-800 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white dark:focus:text-white dark:focus:ring-blue-500"
        ]
          last_updated
        button [
          type="button"
          onClick("onSort", "a_to_z")
          class="border-b border-t border-gray-200 bg-white px-4 py-2 text-sm font-medium text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:text-blue-700 focus:ring-2 focus:ring-blue-700 dark:border-gray-700 dark:bg-gray-800 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white dark:focus:text-white dark:focus:ring-blue-500"
        ]
          -- A-Z
        button [
          type="button"
          onClick("onSort", "fork_sort")
          class="rounded-e-lg border border-gray-200 bg-white px-4 py-2 text-sm font-medium text-gray-900 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:text-blue-700 focus:ring-2 focus:ring-blue-700 dark:border-gray-700 dark:bg-gray-800 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white dark:focus:text-white dark:focus:ring-blue-500"
        ]
          flowbite-code-fork-solid [
            stroke="currentColor"
            fill="currentColor"
            stroke-width="0"
            viewBox="0 0 24 24"
            height="20px"
            width="20px"
            xmlns="http://www.w3.org/2000/svg"
          ]
    h1.my-5.ml-10.flex.w-fit.items-center.rounded.border-2.border-slate-400.p-4.text-left.text-2xl.font-semibold.shadow-lg.shadow-black
      internet_icon
      -- &nbsp;Search Results:
    section.flex.w-full.flex-wrap.justify-evenly
      if(state.searchResults.length !== 0)
        for|Card_Details| of=state.searchResults
          custom_card Card_Details=Card_Details section="programs"
      else
        h1.text-4xl -- Can't find what you are looking for.

style {
  select {
    appearance: none; /* For most modern browsers */
    -webkit-appearance: none; /* For Safari */
    -moz-appearance: none; /* For Firefox */
    background-image: none; /* Remove native dropdown arrow */
  }
}
